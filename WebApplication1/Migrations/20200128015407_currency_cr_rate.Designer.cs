// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(netCoreApp1Context))]
    [Migration("20200128015407_currency_cr_rate")]
    partial class currency_cr_rate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.AccountInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('SO')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("account_invoice");
                });

            modelBuilder.Entity("WebApplication1.Models.AccountInvoiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnName("amount_tax")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTotal")
                        .HasColumnName("amount_total")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountUntaxed")
                        .HasColumnName("amount_untaxed")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InvoiceId")
                        .HasColumnName("invoice_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('INV_line')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<int?>("ProductId")
                        .HasColumnName("product_id")
                        .HasColumnType("int");

                    b.Property<int>("SoLineId")
                        .HasColumnName("so_line_id")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnName("tax_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("SoLineId");

                    b.HasIndex("TaxId");

                    b.ToTable("account_invoice_line");
                });

            modelBuilder.Entity("WebApplication1.Models.Currency", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<DateTime>("Create_date")
                        .HasColumnName("create_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Create_uid")
                        .HasColumnName("create_uid")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("Write_date")
                        .HasColumnName("write_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Write_uid")
                        .HasColumnName("write_uid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("res_currency");
                });

            modelBuilder.Entity("WebApplication1.Models.CurrencyRate", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("Create_date")
                        .HasColumnName("create_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Create_uid")
                        .HasColumnName("create_uid")
                        .HasColumnType("int");

                    b.Property<int>("Currency_id")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(900)")
                        .HasDefaultValueSql("(getdate())")
                        .IsUnicode(false);

                    b.Property<decimal>("Ratio")
                        .HasColumnName("ratio")
                        .HasColumnType("decimal(18,2)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Write_date")
                        .HasColumnName("write_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Write_uid")
                        .HasColumnName("write_uid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Currency_id");

                    b.HasIndex("Date")
                        .IsUnique();

                    b.ToTable("res_currency_rate");
                });

            modelBuilder.Entity("WebApplication1.Models.HrContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("code")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('contract_code')")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("SueldoTotal")
                        .HasColumnName("sueldo_total")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("hr_contract");
                });

            modelBuilder.Entity("WebApplication1.Models.HrContractEmployeeRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractId")
                        .HasColumnName("contract_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("hr_contract_employee_rel");
                });

            modelBuilder.Entity("WebApplication1.Models.HrEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("ContractId")
                        .HasColumnName("contract_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PartnerId")
                        .HasColumnName("partner_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("PartnerId");

                    b.ToTable("hr_employee");
                });

            modelBuilder.Entity("WebApplication1.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountDiscount")
                        .HasColumnName("amount_discount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsCheck")
                        .HasColumnName("is_check")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentDescr")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("payment_descr")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('payment')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("WebApplication1.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnName("descr")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('prd_categ')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("product_category");
                });

            modelBuilder.Entity("WebApplication1.Models.ProductProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Create_uid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('prd_prd')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<int>("PrdTemplateId")
                        .HasColumnName("prd_template_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Write_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Write_uid")
                        .HasColumnType("int");

                    b.Property<int?>("currencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrdTemplateId");

                    b.HasIndex("currencyId");

                    b.ToTable("product_product");
                });

            modelBuilder.Entity("WebApplication1.Models.ProductTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('prd_tmp')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<int>("ProductCategoryId")
                        .HasColumnName("product_category_id")
                        .HasColumnType("int");

                    b.Property<int?>("UomId")
                        .HasColumnName("uom_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("UomId");

                    b.ToTable("product_template");
                });

            modelBuilder.Entity("WebApplication1.Models.ResCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CCountry")
                        .IsRequired()
                        .HasColumnName("c_country")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("CState")
                        .IsRequired()
                        .HasColumnName("c_state")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('res_company')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Phone2")
                        .HasColumnName("phone2")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Street")
                        .HasColumnName("street")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Street2")
                        .HasColumnName("street2")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Vat")
                        .HasColumnName("vat")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("res_company");
                });

            modelBuilder.Entity("WebApplication1.Models.ResGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("ResGroupParentId")
                        .HasColumnName("res_group_parent_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResGroupParentId");

                    b.ToTable("res_group");
                });

            modelBuilder.Entity("WebApplication1.Models.ResGroupRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Arch")
                        .HasColumnName("arch")
                        .HasColumnType("varchar(256)")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("res_group_rule");
                });

            modelBuilder.Entity("WebApplication1.Models.ResGroupRuleRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ResGroupId")
                        .HasColumnName("res_group_id")
                        .HasColumnType("int");

                    b.Property<int>("ResRuleId")
                        .HasColumnName("res_rule_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResGroupId");

                    b.HasIndex("ResRuleId");

                    b.ToTable("res_group_rule_rel");
                });

            modelBuilder.Entity("WebApplication1.Models.ResPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsCustomer")
                        .HasColumnName("is_customer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProvider")
                        .HasColumnName("is_provider")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('res_partner')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<string>("Street")
                        .HasColumnName("street")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Vat")
                        .HasColumnName("vat")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("res_partner");
                });

            modelBuilder.Entity("WebApplication1.Models.ResUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("EmployeeId")
                        .HasColumnName("employee_id")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("is_admin")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('res_user')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("res_user");
                });

            modelBuilder.Entity("WebApplication1.Models.SaleOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('SO')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<int>("PaymentId")
                        .HasColumnName("payment_id")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("sale_order");
                });

            modelBuilder.Entity("WebApplication1.Models.SaleOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("AmountTax")
                        .HasColumnName("amount_tax")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountTotal")
                        .HasColumnName("amount_total")
                        .HasColumnType("money");

                    b.Property<decimal?>("AmountUntaxed")
                        .HasColumnName("amount_untaxed")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Invoiced")
                        .HasColumnName("invoiced")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('SO_line')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<int>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnName("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnName("tax_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaxId");

                    b.ToTable("sale_order_line");
                });

            modelBuilder.Entity("WebApplication1.Models.SoLineInvLineRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InvLineId")
                        .HasColumnName("inv_line_id")
                        .HasColumnType("int");

                    b.Property<int>("SoLineId")
                        .HasColumnName("so_line_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvLineId");

                    b.HasIndex("SoLineId");

                    b.ToTable("so_line_inv_line_rel");
                });

            modelBuilder.Entity("WebApplication1.Models.SoLineInvoiceRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InvId")
                        .HasColumnName("inv_id")
                        .HasColumnType("int");

                    b.Property<int>("SoId")
                        .HasColumnName("so_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvId");

                    b.HasIndex("SoId");

                    b.ToTable("so_line_invoice_rel");
                });

            modelBuilder.Entity("WebApplication1.Models.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DisplayDescr")
                        .HasColumnName("display_descr")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("('tax')")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("tax");
                });

            modelBuilder.Entity("WebApplication1.Models.Uom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_created")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnName("descr")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(256)")
                        .HasDefaultValueSql("('prd_uom')")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("uom");
                });

            modelBuilder.Entity("WebApplication1.Models.AccountInvoice", b =>
                {
                    b.HasOne("WebApplication1.Models.SaleOrder", "Order")
                        .WithMany("AccountInvoice")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__account_i__order__60A75C0F")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.AccountInvoiceLine", b =>
                {
                    b.HasOne("WebApplication1.Models.AccountInvoice", "Invoice")
                        .WithMany("AccountInvoiceLine")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK__account_i__invoi__70DDC3D8")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.AccountInvoiceLine", "SoLine")
                        .WithMany("InverseSoLine")
                        .HasForeignKey("SoLineId")
                        .HasConstraintName("FK__account_i__so_li__71D1E811")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Tax", "Tax")
                        .WithMany("AccountInvoiceLine")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("FK__account_i__tax_i__72C60C4A");
                });

            modelBuilder.Entity("WebApplication1.Models.CurrencyRate", b =>
                {
                    b.HasOne("WebApplication1.Models.Currency", "Currency")
                        .WithMany("Ratios")
                        .HasForeignKey("Currency_id")
                        .HasConstraintName("FK__res_currency_i__currency_rate__60A75C0F")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.HrContractEmployeeRel", b =>
                {
                    b.HasOne("WebApplication1.Models.HrContract", "Contract")
                        .WithMany("HrContractEmployeeRel")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK__hr_contra__contr__4F7CD00D")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.HrEmployee", "Employee")
                        .WithMany("HrContractEmployeeRel")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__hr_contra__emplo__5070F446")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.HrEmployee", b =>
                {
                    b.HasOne("WebApplication1.Models.HrContract", "Contract")
                        .WithMany("HrEmployee")
                        .HasForeignKey("ContractId")
                        .HasConstraintName("FK__hr_employ__contr__37A5467C");

                    b.HasOne("WebApplication1.Models.ResPartner", "Partner")
                        .WithMany("HrEmployee")
                        .HasForeignKey("PartnerId")
                        .HasConstraintName("FK__hr_employ__partn__36B12243")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.ProductProduct", b =>
                {
                    b.HasOne("WebApplication1.Models.ProductTemplate", "PrdTemplate")
                        .WithMany("ProductProduct")
                        .HasForeignKey("PrdTemplateId")
                        .HasConstraintName("FK__product_p__prd_t__239E4DCF")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Currency", "currency")
                        .WithMany()
                        .HasForeignKey("currencyId");
                });

            modelBuilder.Entity("WebApplication1.Models.ProductTemplate", b =>
                {
                    b.HasOne("WebApplication1.Models.ProductCategory", "ProductCategory")
                        .WithMany("ProductTemplate")
                        .HasForeignKey("ProductCategoryId")
                        .HasConstraintName("FK__product_t__produ__1CF15040")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Uom", "Uom")
                        .WithMany("ProductTemplate")
                        .HasForeignKey("UomId")
                        .HasConstraintName("FK__product_t__uom_i__1DE57479");
                });

            modelBuilder.Entity("WebApplication1.Models.ResGroup", b =>
                {
                    b.HasOne("WebApplication1.Models.ResGroup", "ResGroupParent")
                        .WithMany("InverseResGroupParent")
                        .HasForeignKey("ResGroupParentId")
                        .HasConstraintName("FK__res_group__res_g__46E78A0C");
                });

            modelBuilder.Entity("WebApplication1.Models.ResGroupRuleRel", b =>
                {
                    b.HasOne("WebApplication1.Models.ResGroup", "ResGroup")
                        .WithMany("ResGroupRuleRel")
                        .HasForeignKey("ResGroupId")
                        .HasConstraintName("FK__res_group__res_g__4AB81AF0")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.ResGroupRule", "ResRule")
                        .WithMany("ResGroupRuleRel")
                        .HasForeignKey("ResRuleId")
                        .HasConstraintName("FK__res_group__res_r__4BAC3F29")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.ResUser", b =>
                {
                    b.HasOne("WebApplication1.Models.HrEmployee", "Employee")
                        .WithMany("ResUser")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__res_user__employ__3E52440B");
                });

            modelBuilder.Entity("WebApplication1.Models.SaleOrder", b =>
                {
                    b.HasOne("WebApplication1.Models.Payment", "Payment")
                        .WithMany("SaleOrder")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__sale_orde__payme__5AEE82B9")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.SaleOrderLine", b =>
                {
                    b.HasOne("WebApplication1.Models.Tax", "Tax")
                        .WithMany("SaleOrderLine")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("FK__sale_orde__tax_i__6B24EA82");
                });

            modelBuilder.Entity("WebApplication1.Models.SoLineInvLineRel", b =>
                {
                    b.HasOne("WebApplication1.Models.AccountInvoiceLine", "InvLine")
                        .WithMany("SoLineInvLineRel")
                        .HasForeignKey("InvLineId")
                        .HasConstraintName("FK__so_line_i__inv_l__7C4F7684")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.SaleOrderLine", "SoLine")
                        .WithMany("SoLineInvLineRel")
                        .HasForeignKey("SoLineId")
                        .HasConstraintName("FK__so_line_i__so_li__7B5B524B")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.SoLineInvoiceRel", b =>
                {
                    b.HasOne("WebApplication1.Models.AccountInvoice", "Inv")
                        .WithMany("SoLineInvoiceRel")
                        .HasForeignKey("InvId")
                        .HasConstraintName("FK__so_line_i__inv_i__778AC167")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.SaleOrder", "So")
                        .WithMany("SoLineInvoiceRel")
                        .HasForeignKey("SoId")
                        .HasConstraintName("FK__so_line_i__so_id__76969D2E")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
